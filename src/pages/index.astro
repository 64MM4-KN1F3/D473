---
// The date logic is now client-side
---

<html lang="en">
<head>
	<meta charset="utf-8" />
	<meta name="viewport" content="width=device-width" />
	<title>Date Divider</title>
</head>
<body>
	<main>
		<h1 id="date-display"></h1>
	</main>

	<div id="config-bar">
		<div class="color-picker-wrapper">
			<svg
				version="1.1"
				id="color-picker-icon"
				x="0px"
				y="0px"
				width="100%"
				viewBox="0 0 512 512"
				enable-background="new 0 0 512 512"
				xml:space="preserve">
				<path
					id="color-picker-svg-path"
					fill="#ffffff"
					d=" M418.531464,1.000000 C429.417999,4.019499 439.605988,7.360583 448.262360,14.416334 C477.099487,37.921326 479.805359,80.281342 453.705688,106.892326 C435.390808,125.565994 416.671600,143.842926 398.161072,162.325180 C396.301880,164.181519 394.134003,165.810730 393.012482,168.259293 C406.626923,188.776688 406.773438,204.319305 393.538513,217.274216 C380.622650,229.916855 364.626648,229.456558 344.860382,215.817688 C342.664948,216.403183 341.490234,218.356171 339.998535,219.837601 C282.901001,276.541534 225.869446,333.311920 168.727753,389.971252 C153.977646,404.596832 136.044403,410.638153 115.394714,408.172485 C112.524399,407.829773 110.415665,408.365631 108.068657,410.056213 C85.017601,426.660004 55.801754,414.074738 52.286415,385.926483 C51.193222,377.173035 53.776974,369.072388 59.305077,362.118134 C61.071270,359.896301 61.988808,357.755432 61.597488,354.843567 C58.755360,333.694916 65.448135,315.806702 80.451340,300.895325 C111.292160,270.243256 142.184448,239.642960 173.036804,209.002502 C199.042847,183.175064 225.011017,157.309479 251.044754,131.510040 C252.454056,130.113449 254.314117,129.171738 256.486115,127.653633 C246.693665,118.042671 242.994263,107.546577 244.877411,95.434036 C246.040176,87.954994 249.755524,81.714516 255.441345,76.644455 C268.611115,64.900940 284.543793,65.647987 303.026855,78.985329 C305.017090,78.409615 306.227570,76.740501 307.615448,75.364052 C323.466827,59.643162 339.573181,44.165485 355.026489,28.061495 C367.024139,15.558606 379.932129,4.999574 397.682922,1.174289 C404.687653,1.000000 411.375275,1.000000 418.531464,1.000000 M429.005096,26.449404 C410.742310,17.462397 392.569153,20.330376 378.101196,34.640888 C360.452637,52.097416 342.865692,69.616493 325.313324,87.169746 C323.006409,89.476784 320.081055,91.270103 318.637939,94.256630 C319.427429,96.461952 321.126801,97.634048 322.518982,99.031693 C331.690033,108.238625 340.919342,117.387566 350.073730,126.610962 C353.192108,129.752853 354.829895,133.513458 353.412964,137.965561 C352.141296,141.961166 349.196747,144.322952 345.113068,145.048950 C340.665192,145.839691 337.541351,143.400177 334.608276,140.465485 C319.062256,124.910866 303.508850,109.363312 287.888367,93.883591 C281.860687,87.910210 273.951385,87.470650 268.740662,92.553543 C264.517792,96.672829 263.352051,105.086632 269.990814,111.599052 C299.246399,140.297943 328.152191,169.353363 357.203186,198.261017 C359.088440,200.136978 360.980408,202.063614 363.127502,203.607513 C368.188934,207.247009 375.290497,206.392120 379.502563,201.861069 C383.786316,197.252884 384.005402,190.352631 379.855133,185.491501 C377.913055,183.216751 375.707306,181.163757 373.583130,179.048370 C364.835297,170.336746 364.774475,165.975510 373.406769,157.403854 C394.803802,136.157089 416.289856,114.999481 437.607635,93.673569 C458.416412,72.856766 454.681274,42.108925 429.005096,26.449404 M132.681488,278.181641 C120.055496,290.768433 107.449783,303.375671 94.797554,315.936035 C83.037521,327.610657 78.951065,341.496674 83.249725,357.499786 C84.955872,363.851471 83.455742,368.325958 78.310356,372.333557 C71.561371,377.590210 70.992317,386.744293 76.581261,392.545044 C82.293602,398.473877 92.143913,398.335297 97.293167,391.571350 C101.622963,385.883789 106.459305,385.032440 113.042213,386.624237 C128.402191,390.338501 142.226151,386.874634 153.565140,375.678192 C192.094528,337.633179 230.498062,299.460632 268.929230,261.316223 C270.493958,259.763153 272.336273,258.319641 272.984283,255.867233 C272.090302,255.661163 271.617676,255.457153 271.144958,255.456787 C233.655731,255.427795 196.166458,255.436340 158.677383,255.354233 C156.043091,255.348465 154.318008,256.541229 152.624695,258.245239 C146.165298,264.745544 139.667099,271.207275 132.681488,278.181641 M206.004257,205.504303 C196.564667,214.886993 187.125092,224.269684 177.019012,234.314835 C179.130157,234.571686 179.936081,234.755035 180.742142,234.755554 C217.881882,234.779480 255.021698,234.766251 292.161316,234.839844 C294.952515,234.845367 296.840912,233.623993 298.666473,231.777679 C304.169281,226.212280 309.689178,220.661667 315.304016,215.209930 C320.174255,210.481201 325.183044,205.895126 329.491760,201.846283 C309.294128,181.298599 289.965637,161.635132 270.252960,141.580795 C248.954880,162.774704 227.732910,183.892868 206.004257,205.504303 z" />
				<path
					id="path2"
					fill="#ffffff"
					d=" M67.466118,513.000000 C65.925629,511.819672 64.394203,511.625732 63.003990,511.089417 C45.413666,504.303284 37.727188,485.418304 45.809597,468.391327 C51.020306,457.414001 58.735081,448.206268 67.459335,439.882355 C72.007217,435.543121 77.667664,435.667725 82.231461,440.176483 C90.079117,447.929504 97.171989,456.355347 102.336548,466.182770 C112.080963,484.725037 104.878029,503.733612 85.327042,511.426300 C84.398331,511.791718 83.494263,512.219788 82.289352,512.809326 C77.310745,513.000000 72.621490,513.000000 67.466118,513.000000 M72.971054,464.735626 C69.618889,468.457886 66.871643,472.604919 64.540123,477.018555 C62.361607,481.142517 62.761501,485.120087 66.007675,488.486450 C69.315620,491.916931 73.263313,493.730469 78.136681,491.913971 C82.755867,490.192200 86.168007,486.989105 85.734894,481.984955 C85.074478,474.354645 80.088821,468.861237 74.746841,463.819855 C74.591644,463.673340 73.880768,464.115662 72.971054,464.735626 z" />
			</svg>
			<input type="color" id="color-picker" value="#FFFFFF">
		</div>
	</div>

	<script is:inline>
		// --- Date Logic ---
		const dateDisplay = document.getElementById('date-display');
		const urlParams = new URLSearchParams(window.location.search);
		let pinnedDate = urlParams.get('date');

		if (!pinnedDate) {
			const today = new Date();
			const options = { year: 'numeric', month: 'long', day: 'numeric' };
			pinnedDate = today.toLocaleDateString('en-US', options);
			
			const newUrl = new URL(window.location);
			newUrl.searchParams.set('date', pinnedDate);
			window.history.pushState({ path: newUrl.href }, '', newUrl.href);
		}

		dateDisplay.innerHTML = pinnedDate.replace(', ', '<br>');
		document.title = pinnedDate;

		// --- Color Picker Logic ---
		const colorPicker = document.getElementById('color-picker');
		const svgPath = document.getElementById('color-picker-svg-path');
		const svgPath2 = document.getElementById('path2');
		const configBar = document.getElementById('config-bar');

		// --- Color Contrast Logic ---
		function getContrastColor(hex) {
			if (hex.indexOf('#') === 0) {
				hex = hex.slice(1);
			}
			// Convert 3-digit hex to 6-digits.
			if (hex.length === 3) {
				hex = hex + hex + hex + hex + hex + hex;
			}
			if (hex.length !== 6) {
				return '#000000'; // Default to black on error
			}
			const r = parseInt(hex.slice(0, 2), 16);
			const g = parseInt(hex.slice(2, 4), 16);
			const b = parseInt(hex.slice(4, 6), 16);
			// Using the YIQ formula to determine brightness
			const yiq = ((r * 299) + (g * 587) + (b * 114)) / 1000;
			return (yiq >= 128) ? '#000000' : '#FFFFFF';
		}

		function updateColors(color) {
			const contrastColor = getContrastColor(color);
			
			// Set page background and picker value
			document.body.style.backgroundColor = color;
			colorPicker.value = color;

			// Set text and config bar background for contrast
			dateDisplay.style.color = contrastColor;
			configBar.style.backgroundColor = contrastColor === '#000000'
				? 'rgba(0, 0, 0, 0.9)'
				: 'rgba(255, 255, 255, 0.9)';

			// Set the icon to the selected color
			svgPath.setAttribute('fill', color);
			svgPath2.setAttribute('fill', color);
		}

		// Set initial colors on page load
		const initialColor = urlParams.get('bg_color') || '#FFFFFF';
		updateColors(initialColor);

		// Listen for color changes
		colorPicker.addEventListener('input', (event) => {
			const newColor = event.target.value;
			updateColors(newColor);

			const newUrl = new URL(window.location);
			newUrl.searchParams.set('bg_color', newColor);
			window.history.pushState({ path: newUrl.href }, '', newUrl.href);
		});
	</script>
</body>
</html>

<style>
	body {
		margin: 0;
		font-family: sans-serif;
		transition: background-color 0.2s;
	}
	main {
		display: flex;
		justify-content: center;
		align-items: top;
		min-height: 100vh;
	}
	h1 {
		font-size: 5rem;
		text-align: center;
		line-height: 1.2;
	}
	#config-bar {
		position: fixed;
		bottom: 0;
		left: 0;
		width: 100%;
		background-color: rgba(0, 0, 0, 0.9);
		display: flex;
		justify-content: center;
		align-items: center;
		padding: 10px 0;
	}
	.color-picker-wrapper {
		position: relative;
		width: 40px; /* Size of the clickable area */
		height: 40px;
		cursor: pointer;
	}
	#color-picker-icon {
		width: 100%;
		height: 100%;
		/* Make sure icon is below the invisible input */
		position: absolute;
		top: 0;
		left: 0;
		z-index: 1;
	}
	#color-picker {
		/* Invisible input layer */
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		opacity: 0;
		border: none;
		padding: 0;
		z-index: 2; /* Ensure input is on top */
	}
</style>
